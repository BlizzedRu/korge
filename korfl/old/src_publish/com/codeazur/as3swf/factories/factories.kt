package com.codeazur.as3swf.factories

import com.codeazur.as3swf.data.actions.ActionUnknown
import com.codeazur.as3swf.data.actions.IAction
import com.codeazur.as3swf.data.actions.swf3.*
import com.codeazur.as3swf.data.actions.swf4.*
import com.codeazur.as3swf.data.actions.swf5.*
import com.codeazur.as3swf.data.actions.swf6.*
import com.codeazur.as3swf.data.actions.swf7.*
import com.codeazur.as3swf.data.filters.*
import com.codeazur.as3swf.tags.etc.TagSWFEncryptActions
import com.codeazur.as3swf.tags.etc.TagSWFEncryptSignature

interface ISWFTagFactory {
	fun create(type: Int): com.codeazur.as3swf.tags.ITag
}

object SWFActionFactory {
	fun create(code: Int, length: Int, pos: Int): IAction {
		return when (code) {
		/* 0x04 */ ActionNextFrame.CODE -> ActionNextFrame(code, length, pos)
		/* 0x05 */ ActionPreviousFrame.CODE -> ActionPreviousFrame(code, length, pos)
		/* 0x06 */ ActionPlay.CODE -> ActionPlay(code, length, pos)
		/* 0x07 */ ActionStop.CODE -> ActionStop(code, length, pos)
		/* 0x08 */ ActionToggleQuality.CODE -> ActionToggleQuality(code, length, pos)
		/* 0x09 */ ActionStopSounds.CODE -> ActionStopSounds(code, length, pos)
		/* 0x0a */ ActionAdd.CODE -> ActionAdd(code, length, pos)
		/* 0x0b */ ActionSubtract.CODE -> ActionSubtract(code, length, pos)
		/* 0x0c */ ActionMultiply.CODE -> ActionMultiply(code, length, pos)
		/* 0x0d */ ActionDivide.CODE -> ActionDivide(code, length, pos)
		/* 0x0e */ ActionEquals.CODE -> ActionEquals(code, length, pos)
		/* 0x0f */ ActionLess.CODE -> ActionLess(code, length, pos)
		/* 0x10 */ ActionAnd.CODE -> ActionAnd(code, length, pos)
		/* 0x11 */ ActionOr.CODE -> ActionOr(code, length, pos)
		/* 0x12 */ ActionNot.CODE -> ActionNot(code, length, pos)
		/* 0x13 */ ActionStringEquals.CODE -> ActionStringEquals(code, length, pos)
		/* 0x14 */ ActionStringLength.CODE -> ActionStringLength(code, length, pos)
		/* 0x15 */ ActionStringExtract.CODE -> ActionStringExtract(code, length, pos)
		/* 0x17 */ ActionPop.CODE -> ActionPop(code, length, pos)
		/* 0x18 */ ActionToInteger.CODE -> ActionToInteger(code, length, pos)
		/* 0x1c */ ActionGetVariable.CODE -> ActionGetVariable(code, length, pos)
		/* 0x1d */ ActionSetVariable.CODE -> ActionSetVariable(code, length, pos)
		/* 0x20 */ ActionSetTarget2.CODE -> ActionSetTarget2(code, length, pos)
		/* 0x21 */ ActionStringAdd.CODE -> ActionStringAdd(code, length, pos)
		/* 0x22 */ ActionGetProperty.CODE -> ActionGetProperty(code, length, pos)
		/* 0x23 */ ActionSetProperty.CODE -> ActionSetProperty(code, length, pos)
		/* 0x24 */ ActionCloneSprite.CODE -> ActionCloneSprite(code, length, pos)
		/* 0x25 */ ActionRemoveSprite.CODE -> ActionRemoveSprite(code, length, pos)
		/* 0x26 */ ActionTrace.CODE -> ActionTrace(code, length, pos)
		/* 0x27 */ ActionStartDrag.CODE -> ActionStartDrag(code, length, pos)
		/* 0x28 */ ActionEndDrag.CODE -> ActionEndDrag(code, length, pos)
		/* 0x29 */ ActionStringLess.CODE -> ActionStringLess(code, length, pos)
		/* 0x2a */ ActionThrow.CODE -> ActionThrow(code, length, pos)
		/* 0x2b */ ActionCastOp.CODE -> ActionCastOp(code, length, pos)
		/* 0x2c */ ActionImplementsOp.CODE -> ActionImplementsOp(code, length, pos)
		/* 0x30 */ ActionRandomNumber.CODE -> ActionRandomNumber(code, length, pos)
		/* 0x31 */ ActionMBStringLength.CODE -> ActionMBStringLength(code, length, pos)
		/* 0x32 */ ActionCharToAscii.CODE -> ActionCharToAscii(code, length, pos)
		/* 0x33 */ ActionAsciiToChar.CODE -> ActionAsciiToChar(code, length, pos)
		/* 0x34 */ ActionGetTime.CODE -> ActionGetTime(code, length, pos)
		/* 0x35 */ ActionMBStringExtract.CODE -> ActionMBStringExtract(code, length, pos)
		/* 0x36 */ ActionMBCharToAscii.CODE -> ActionMBCharToAscii(code, length, pos)
		/* 0x37 */ ActionMBAsciiToChar.CODE -> ActionMBAsciiToChar(code, length, pos)
		/* 0x3a */ ActionDelete.CODE -> ActionDelete(code, length, pos)
		/* 0x3b */ ActionDelete2.CODE -> ActionDelete2(code, length, pos)
		/* 0x3c */ ActionDefineLocal.CODE -> ActionDefineLocal(code, length, pos)
		/* 0x3d */ ActionCallFunction.CODE -> ActionCallFunction(code, length, pos)
		/* 0x3e */ ActionReturn.CODE -> ActionReturn(code, length, pos)
		/* 0x3f */ ActionModulo.CODE -> ActionModulo(code, length, pos)
		/* 0x40 */ ActionNewObject.CODE -> ActionNewObject(code, length, pos)
		/* 0x41 */ ActionDefineLocal2.CODE -> ActionDefineLocal2(code, length, pos)
		/* 0x42 */ ActionInitArray.CODE -> ActionInitArray(code, length, pos)
		/* 0x43 */ ActionInitObject.CODE -> ActionInitObject(code, length, pos)
		/* 0x44 */ ActionTypeOf.CODE -> ActionTypeOf(code, length, pos)
		/* 0x45 */ ActionTargetPath.CODE -> ActionTargetPath(code, length, pos)
		/* 0x46 */ ActionEnumerate.CODE -> ActionEnumerate(code, length, pos)
		/* 0x47 */ ActionAdd2.CODE -> ActionAdd2(code, length, pos)
		/* 0x48 */ ActionLess2.CODE -> ActionLess2(code, length, pos)
		/* 0x49 */ ActionEquals2.CODE -> ActionEquals2(code, length, pos)
		/* 0x4a */ ActionToNumber.CODE -> ActionToNumber(code, length, pos)
		/* 0x4b */ ActionToString.CODE -> ActionToString(code, length, pos)
		/* 0x4c */ ActionPushDuplicate.CODE -> ActionPushDuplicate(code, length, pos)
		/* 0x4d */ ActionStackSwap.CODE -> ActionStackSwap(code, length, pos)
		/* 0x4e */ ActionGetMember.CODE -> ActionGetMember(code, length, pos)
		/* 0x4f */ ActionSetMember.CODE -> ActionSetMember(code, length, pos)
		/* 0x50 */ ActionIncrement.CODE -> ActionIncrement(code, length, pos)
		/* 0x51 */ ActionDecrement.CODE -> ActionDecrement(code, length, pos)
		/* 0x52 */ ActionCallMethod.CODE -> ActionCallMethod(code, length, pos)
		/* 0x53 */ ActionNewMethod.CODE -> ActionNewMethod(code, length, pos)
		/* 0x54 */ ActionInstanceOf.CODE -> ActionInstanceOf(code, length, pos)
		/* 0x55 */ ActionEnumerate2.CODE -> ActionEnumerate2(code, length, pos)
		/* 0x60 */ ActionBitAnd.CODE -> ActionBitAnd(code, length, pos)
		/* 0x61 */ ActionBitOr.CODE -> ActionBitOr(code, length, pos)
		/* 0x62 */ ActionBitXor.CODE -> ActionBitXor(code, length, pos)
		/* 0x63 */ ActionBitLShift.CODE -> ActionBitLShift(code, length, pos)
		/* 0x64 */ ActionBitRShift.CODE -> ActionBitRShift(code, length, pos)
		/* 0x65 */ ActionBitURShift.CODE -> ActionBitURShift(code, length, pos)
		/* 0x66 */ ActionStrictEquals.CODE -> ActionStrictEquals(code, length, pos)
		/* 0x67 */ ActionGreater.CODE -> ActionGreater(code, length, pos)
		/* 0x68 */ ActionStringGreater.CODE -> ActionStringGreater(code, length, pos)
		/* 0x69 */ ActionExtends.CODE -> ActionExtends(code, length, pos)
		/* 0x81 */ ActionGotoFrame.CODE -> ActionGotoFrame(code, length, pos)
		/* 0x83 */ ActionGetURL.CODE -> ActionGetURL(code, length, pos)
		/* 0x87 */ ActionStoreRegister.CODE -> ActionStoreRegister(code, length, pos)
		/* 0x88 */ ActionConstantPool.CODE -> ActionConstantPool(code, length, pos)
		/* 0x8a */ ActionWaitForFrame.CODE -> ActionWaitForFrame(code, length, pos)
		/* 0x8b */ ActionSetTarget.CODE -> ActionSetTarget(code, length, pos)
		/* 0x8c */ ActionGotoLabel.CODE -> ActionGotoLabel(code, length, pos)
		/* 0x8d */ ActionWaitForFrame2.CODE -> ActionWaitForFrame2(code, length, pos)
		/* 0x8e */ ActionDefineFunction2.CODE -> ActionDefineFunction2(code, length, pos)
		/* 0x8f */ ActionTry.CODE -> ActionTry(code, length, pos)
		/* 0x94 */ ActionWith.CODE -> ActionWith(code, length, pos)
		/* 0x96 */ ActionPush.CODE -> ActionPush(code, length, pos)
		/* 0x99 */ ActionJump.CODE -> ActionJump(code, length, pos)
		/* 0x9a */ ActionGetURL2.CODE -> ActionGetURL2(code, length, pos)
		/* 0x9b */ ActionDefineFunction.CODE -> ActionDefineFunction(code, length, pos)
		/* 0x9d */ ActionIf.CODE -> ActionIf(code, length, pos)
		/* 0x9e */ ActionCall.CODE -> ActionCall(code, length, pos)
		/* 0x9f */ ActionGotoFrame2.CODE -> ActionGotoFrame2(code, length, pos)
			else -> ActionUnknown(code, length, pos)
		}
	}
}

object SWFFilterFactory {
	fun create(id: Int): IFilter {
		return when (id) {
			0 -> FilterDropShadow(id)
			1 -> FilterBlur(id)
			2 -> FilterGlow(id)
			3 -> FilterBevel(id)
			4 -> FilterGradientGlow(id)
			5 -> FilterConvolution(id)
			6 -> FilterColorMatrix(id)
			7 -> FilterGradientBevel(id)
			else -> throw(Error("Unknown filter ID: " + id))
		}
	}
}

open class SWFTagFactory : ISWFTagFactory {
	override fun create(type: Int): com.codeazur.as3swf.tags.ITag {
		return when (type) {
		/*   0 */ com.codeazur.as3swf.tags.TagEnd.TYPE -> createTagEnd()
		/*   1 */ com.codeazur.as3swf.tags.TagShowFrame.TYPE -> createTagShowFrame()
		/*   2 */ com.codeazur.as3swf.tags.TagDefineShape.TYPE -> createTagDefineShape()
		/*   4 */ com.codeazur.as3swf.tags.TagPlaceObject.TYPE -> createTagPlaceObject()
		/*   5 */ com.codeazur.as3swf.tags.TagRemoveObject.TYPE -> createTagRemoveObject()
		/*   6 */ com.codeazur.as3swf.tags.TagDefineBits.TYPE -> createTagDefineBits()
		/*   7 */ com.codeazur.as3swf.tags.TagDefineButton.TYPE -> createTagDefineButton()
		/*   8 */ com.codeazur.as3swf.tags.TagJPEGTables.TYPE -> createTagJPEGTables()
		/*   9 */ com.codeazur.as3swf.tags.TagSetBackgroundColor.TYPE -> createTagSetBackgroundColor()
		/*  10 */ com.codeazur.as3swf.tags.TagDefineFont.TYPE -> createTagDefineFont()
		/*  11 */ com.codeazur.as3swf.tags.TagDefineText.TYPE -> createTagDefineText()
		/*  12 */ com.codeazur.as3swf.tags.TagDoAction.TYPE -> createTagDoAction()
		/*  13 */ com.codeazur.as3swf.tags.TagDefineFontInfo.TYPE -> createTagDefineFontInfo()
		/*  14 */ com.codeazur.as3swf.tags.TagDefineSound.TYPE -> createTagDefineSound()
		/*  15 */ com.codeazur.as3swf.tags.TagStartSound.TYPE -> createTagStartSound()
		/*  17 */ com.codeazur.as3swf.tags.TagDefineButtonSound.TYPE -> createTagDefineButtonSound()
		/*  18 */ com.codeazur.as3swf.tags.TagSoundStreamHead.TYPE -> createTagSoundStreamHead()
		/*  19 */ com.codeazur.as3swf.tags.TagSoundStreamBlock.TYPE -> createTagSoundStreamBlock()
		/*  20 */ com.codeazur.as3swf.tags.TagDefineBitsLossless.TYPE -> createTagDefineBitsLossless()
		/*  21 */ com.codeazur.as3swf.tags.TagDefineBitsJPEG2.TYPE -> createTagDefineBitsJPEG2()
		/*  22 */ com.codeazur.as3swf.tags.TagDefineShape2.TYPE -> createTagDefineShape2()
		/*  23 */ com.codeazur.as3swf.tags.TagDefineButtonCxform.TYPE -> createTagDefineButtonCxform()
		/*  24 */ com.codeazur.as3swf.tags.TagProtect.TYPE -> createTagProtect()
		/*  26 */ com.codeazur.as3swf.tags.TagPlaceObject2.TYPE -> createTagPlaceObject2()
		/*  28 */ com.codeazur.as3swf.tags.TagRemoveObject2.TYPE -> createTagRemoveObject2()
		/*  32 */ com.codeazur.as3swf.tags.TagDefineShape3.TYPE -> createTagDefineShape3()
		/*  33 */ com.codeazur.as3swf.tags.TagDefineText2.TYPE -> createTagDefineText2()
		/*  34 */ com.codeazur.as3swf.tags.TagDefineButton2.TYPE -> createTagDefineButton2()
		/*  35 */ com.codeazur.as3swf.tags.TagDefineBitsJPEG3.TYPE -> createTagDefineBitsJPEG3()
		/*  36 */ com.codeazur.as3swf.tags.TagDefineBitsLossless2.TYPE -> createTagDefineBitsLossless2()
		/*  37 */ com.codeazur.as3swf.tags.TagDefineEditText.TYPE -> createTagDefineEditText()
		/*  39 */ com.codeazur.as3swf.tags.TagDefineSprite.TYPE -> createTagDefineSprite()
		/*  40 */ com.codeazur.as3swf.tags.TagNameCharacter.TYPE -> createTagNameCharacter()
		/*  41 */ com.codeazur.as3swf.tags.TagProductInfo.TYPE -> createTagProductInfo()
		/*  43 */ com.codeazur.as3swf.tags.TagFrameLabel.TYPE -> createTagFrameLabel()
		/*  45 */ com.codeazur.as3swf.tags.TagSoundStreamHead2.TYPE -> createTagSoundStreamHead2()
		/*  46 */ com.codeazur.as3swf.tags.TagDefineMorphShape.TYPE -> createTagDefineMorphShape()
		/*  48 */ com.codeazur.as3swf.tags.TagDefineFont2.TYPE -> createTagDefineFont2()
		/*  56 */ com.codeazur.as3swf.tags.TagExportAssets.TYPE -> createTagExportAssets()
		/*  57 */ com.codeazur.as3swf.tags.TagImportAssets.TYPE -> createTagImportAssets()
		/*  58 */ com.codeazur.as3swf.tags.TagEnableDebugger.TYPE -> createTagEnableDebugger()
		/*  59 */ com.codeazur.as3swf.tags.TagDoInitAction.TYPE -> createTagDoInitAction()
		/*  60 */ com.codeazur.as3swf.tags.TagDefineVideoStream.TYPE -> createTagDefineVideoStream()
		/*  61 */ com.codeazur.as3swf.tags.TagVideoFrame.TYPE -> createTagVideoFrame()
		/*  62 */ com.codeazur.as3swf.tags.TagDefineFontInfo2.TYPE -> createTagDefineFontInfo2()
		/*  63 */ com.codeazur.as3swf.tags.TagDebugID.TYPE -> createTagDebugID()
		/*  64 */ com.codeazur.as3swf.tags.TagEnableDebugger2.TYPE -> createTagEnableDebugger2()
		/*  65 */ com.codeazur.as3swf.tags.TagScriptLimits.TYPE -> createTagScriptLimits()
		/*  66 */ com.codeazur.as3swf.tags.TagSetTabIndex.TYPE -> createTagSetTabIndex()
		/*  69 */ com.codeazur.as3swf.tags.TagFileAttributes.TYPE -> createTagFileAttributes()
		/*  70 */ com.codeazur.as3swf.tags.TagPlaceObject3.TYPE -> createTagPlaceObject3()
		/*  71 */ com.codeazur.as3swf.tags.TagImportAssets2.TYPE -> createTagImportAssets2()
		/*  72 */ com.codeazur.as3swf.tags.TagDoABCDeprecated.TYPE -> createTagDoABCDeprecated()
		/*  73 */ com.codeazur.as3swf.tags.TagDefineFontAlignZones.TYPE -> createTagDefineFontAlignZones()
		/*  74 */ com.codeazur.as3swf.tags.TagCSMTextSettings.TYPE -> createTagCSMTextSettings()
		/*  75 */ com.codeazur.as3swf.tags.TagDefineFont3.TYPE -> createTagDefineFont3()
		/*  76 */ com.codeazur.as3swf.tags.TagSymbolClass.TYPE -> createTagSymbolClass()
		/*  77 */ com.codeazur.as3swf.tags.TagMetadata.TYPE -> createTagMetadata()
		/*  78 */ com.codeazur.as3swf.tags.TagDefineScalingGrid.TYPE -> createTagDefineScalingGrid()
		/*  82 */ com.codeazur.as3swf.tags.TagDoABC.TYPE -> createTagDoABC()
		/*  83 */ com.codeazur.as3swf.tags.TagDefineShape4.TYPE -> createTagDefineShape4()
		/*  84 */ com.codeazur.as3swf.tags.TagDefineMorphShape2.TYPE -> createTagDefineMorphShape2()
		/*  86 */ com.codeazur.as3swf.tags.TagDefineSceneAndFrameLabelData.TYPE -> createTagDefineSceneAndFrameLabelData()
		/*  87 */ com.codeazur.as3swf.tags.TagDefineBinaryData.TYPE -> createTagDefineBinaryData()
		/*  88 */ com.codeazur.as3swf.tags.TagDefineFontName.TYPE -> createTagDefineFontName()
		/*  89 */ com.codeazur.as3swf.tags.TagStartSound2.TYPE -> createTagStartSound2()
		/*  90 */ com.codeazur.as3swf.tags.TagDefineBitsJPEG4.TYPE -> createTagDefineBitsJPEG4()
		/*  91 */ com.codeazur.as3swf.tags.TagDefineFont4.TYPE -> createTagDefineFont4()

		/*  93 */ com.codeazur.as3swf.tags.TagEnableTelemetry.TYPE -> createTagEnableTelemetry()
		/*  94 */ com.codeazur.as3swf.tags.TagPlaceObject4.TYPE -> createTagPlaceObject4()

		/* 253 */ TagSWFEncryptActions.TYPE -> createTagSWFEncryptActions()
		/* 255 */ TagSWFEncryptSignature.TYPE -> createTagSWFEncryptSignature()

			else -> createTagUnknown(type)
		}
	}

	protected fun createTagEnd(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagEnd()
	protected fun createTagShowFrame(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagShowFrame()
	protected fun createTagDefineShape(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineShape()
	protected fun createTagPlaceObject(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagPlaceObject()
	protected fun createTagRemoveObject(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagRemoveObject()
	protected fun createTagDefineBits(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBits()
	protected fun createTagDefineButton(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineButton()
	protected fun createTagJPEGTables(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagJPEGTables()
	protected fun createTagSetBackgroundColor(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSetBackgroundColor()
	protected fun createTagDefineFont(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFont()
	protected fun createTagDefineText(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineText()
	protected fun createTagDoAction(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDoAction()
	protected fun createTagDefineFontInfo(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFontInfo()
	protected fun createTagDefineSound(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineSound()
	protected fun createTagStartSound(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagStartSound()
	protected fun createTagDefineButtonSound(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineButtonSound()
	protected fun createTagSoundStreamHead(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSoundStreamHead()
	protected fun createTagSoundStreamBlock(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSoundStreamBlock()
	protected fun createTagDefineBitsLossless(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBitsLossless()
	protected fun createTagDefineBitsJPEG2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBitsJPEG2()
	protected fun createTagDefineShape2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineShape2()
	protected fun createTagDefineButtonCxform(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineButtonCxform()
	protected fun createTagProtect(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagProtect()
	protected fun createTagPlaceObject2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagPlaceObject2()
	protected fun createTagRemoveObject2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagRemoveObject2()
	protected fun createTagDefineShape3(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineShape3()
	protected fun createTagDefineText2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineText2()
	protected fun createTagDefineButton2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineButton2()
	protected fun createTagDefineBitsJPEG3(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBitsJPEG3()
	protected fun createTagDefineBitsLossless2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBitsLossless2()
	protected fun createTagDefineEditText(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineEditText()
	protected fun createTagDefineSprite(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineSprite()
	protected fun createTagNameCharacter(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagNameCharacter()
	protected fun createTagProductInfo(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagProductInfo()
	protected fun createTagFrameLabel(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagFrameLabel()
	protected fun createTagSoundStreamHead2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSoundStreamHead2()
	protected fun createTagDefineMorphShape(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineMorphShape()
	protected fun createTagDefineFont2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFont2()
	protected fun createTagExportAssets(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagExportAssets()
	protected fun createTagImportAssets(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagImportAssets()
	protected fun createTagEnableDebugger(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagEnableDebugger()
	protected fun createTagDoInitAction(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDoInitAction()
	protected fun createTagDefineVideoStream(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineVideoStream()
	protected fun createTagVideoFrame(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagVideoFrame()
	protected fun createTagDefineFontInfo2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFontInfo2()
	protected fun createTagDebugID(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDebugID()
	protected fun createTagEnableDebugger2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagEnableDebugger2()
	protected fun createTagScriptLimits(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagScriptLimits()
	protected fun createTagSetTabIndex(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSetTabIndex()
	protected fun createTagFileAttributes(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagFileAttributes()
	protected fun createTagPlaceObject3(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagPlaceObject3()
	protected fun createTagImportAssets2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagImportAssets2()
	protected fun createTagDefineFontAlignZones(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFontAlignZones()
	protected fun createTagCSMTextSettings(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagCSMTextSettings()
	protected fun createTagDefineFont3(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFont3()
	protected fun createTagSymbolClass(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagSymbolClass()
	protected fun createTagMetadata(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagMetadata()
	protected fun createTagDefineScalingGrid(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineScalingGrid()
	protected fun createTagDoABC(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDoABC()
	protected fun createTagDoABCDeprecated(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDoABCDeprecated()
	protected fun createTagDefineShape4(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineShape4()
	protected fun createTagDefineMorphShape2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineMorphShape2()
	protected fun createTagDefineSceneAndFrameLabelData(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineSceneAndFrameLabelData()
	protected fun createTagDefineBinaryData(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBinaryData()
	protected fun createTagDefineFontName(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFontName()
	protected fun createTagStartSound2(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagStartSound2()
	protected fun createTagDefineBitsJPEG4(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineBitsJPEG4()
	protected fun createTagDefineFont4(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagDefineFont4()
	protected fun createTagEnableTelemetry(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagEnableTelemetry()
	protected fun createTagPlaceObject4(): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagPlaceObject4()

	protected fun createTagSWFEncryptActions(): com.codeazur.as3swf.tags.ITag = TagSWFEncryptActions()
	protected fun createTagSWFEncryptSignature(): com.codeazur.as3swf.tags.ITag = TagSWFEncryptSignature()

	protected fun createTagUnknown(type: Int): com.codeazur.as3swf.tags.ITag = com.codeazur.as3swf.tags.TagUnknown(type)
}
