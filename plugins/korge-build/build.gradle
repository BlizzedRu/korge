import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

Properties gradleProperties = new Properties()
gradleProperties.load(new StringReader(new File(rootDir, "../gradle.properties").text))
ext.gradleProperties = gradleProperties

def version(String name) {
	if (name == "korge") return gradleProperties["version"]
	return gradleProperties["${name}Version"]
}

def setKDep(ExternalModuleDependency it) {
	//it.targetConfiguration = "default"
	//it.targetConfiguration = "runtime"
	it.attributes { attribute(KotlinPlatformType.attribute, KotlinPlatformType.jvm) }
}

dependencies {
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-test")
	compile("org.jetbrains.kotlin:kotlin-test-junit")

	compile project(":korge-jvm-bundle")
	/*
	compile("com.soywiz.korlibs.korge:korge-jvm:${version("korge")}") { setKDep(it) }
	compile("com.soywiz.korlibs.korge:korge-swf-jvm:${version("korge")}") { setKDep(it) }
	compile("com.soywiz.korlibs.krypto:krypto-jvm:${version("krypto")}") { setKDep(it) }
	compile("com.soywiz.korlibs.korau:korau-mp3-jvm:${version("korau")}") { setKDep(it) }
	compile("com.soywiz.korlibs.korau:korau-ogg-vorbis-jvm:${version("korau")}") { setKDep(it) }
	*/
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId = project.group
			artifactId = project.name
			version = project.version

			from components.java
		}
	}
}
